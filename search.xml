<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[css变量的妙用（解决transform多属性变化问题，适用于其它复合属性）]]></title>
      <url>%2F2018%2F04%2F11%2FvarCSS%26transform%2F</url>
      <content type="text"><![CDATA[前面已经介绍了css变量的使用。近期发现一个问题正好用css变量来解决。那就是关于类似transform这种存在多个属性的复合属性样式，如何通过js动态的改变其中某个属性的值，而不影响其它属性的值的问题。 问题难点transform定义2D/3D转换，可以同时定义多个转换 &lt;style&gt; #test { position: absolute; left: 0; right: 0; top: 0; bottom: 0; margin: auto; width: 50px; height: 50px; background-color: #0c60ee; transform: scale(2) rotate(15deg) rotateX(20deg) rotateY(10deg) rotateZ(13deg); } &lt;/style&gt; &lt;div id=&quot;test&quot;&gt;&lt;/div&gt; 如上，定义了一个小方块，进行了放大/缩小、2D旋转、以及沿着X、Y、Z轴的3D旋转的转换。当我们想通过js动态更改transform其中某个单一属性时，会发现js没有提供这种方法。按照正常的思路，我们只有获取整个transform属性值，然后改变其中我们想改变的值，然后再重新赋值给transform。然而只有当style是通过内嵌&lt;div style=&quot;&quot;&gt;&lt;/div&gt;的方式写入的时候，我们才能通过js的style对象获取到style里面具体的值。否则我们只能通过getComputedStyle() //非IE或currentStyle //IE方法，去获得css最终渲染的值，这时我们得到的transform只能是matrix //2D或matrix3d //3D矩阵。这里介绍一个获取的方法。 /** * 获取元素css最终渲染的值 * @param element dom元素 * @param attr 想要获取的属性名称 * @returns {*} */ function getFinStyle(element, attr) { // if (element.currentStyle) { //IE return element.currentStyle[attr]; } else { //非IE return window.getComputedStyle(element, null)[attr]; } } getFinStyle(document.getElementById(&quot;test&quot;), &quot;transform&quot;); 然并卵，确实有人写了将矩阵再转换回去的方法，但涉及到的计算、判断、正则等实在太麻烦，并且不能100%匹配。那么，接下来我们可以通过css变量巧妙的解决这个问题。 解决问题闲话不多说，这里附上一个demo，详看代码。 css#test { --scale: 1; /*定义缩放系数*/ --rotate: 0deg; /*定义2D旋转角度*/ --rotateX: 0deg; /*定义3D X轴旋转角度*/ --rotateY: 0deg; /*定义3D Y轴旋转角度*/ --rotateZ: 0deg; /*定义3D Z轴旋转角度*/ position: absolute; left: 0; right: 0; top: 0; bottom: 0; margin: auto; width: 50px; height: 50px; background-color: #0c60ee; transform: scale(var(--scale)) rotate(var(--rotate)) rotateX(var(--rotateX)) rotateY(var(--rotateY)) rotateZ(var(--rotateZ)); } html&lt;input type=&quot;range&quot; min=&quot;1&quot; max=&quot;200&quot; value=&quot;100&quot; oninput=&quot;scale(this.value)&quot;&gt;放大/缩小&lt;br/&gt; &lt;input type=&quot;range&quot; min=&quot;0&quot; max=&quot;360&quot; value=&quot;0&quot; oninput=&quot;rotate(this.value)&quot;&gt;2D旋转&lt;br/&gt; &lt;input type=&quot;range&quot; min=&quot;0&quot; max=&quot;360&quot; value=&quot;0&quot; oninput=&quot;rotateX(this.value)&quot;&gt;沿着X轴的3D旋转&lt;br/&gt; &lt;input type=&quot;range&quot; min=&quot;0&quot; max=&quot;360&quot; value=&quot;0&quot; oninput=&quot;rotateY(this.value)&quot;&gt;沿着Y轴的3D旋转&lt;br/&gt; &lt;input type=&quot;range&quot; min=&quot;0&quot; max=&quot;360&quot; value=&quot;0&quot; oninput=&quot;rotateZ(this.value)&quot;&gt;沿着Z轴的3D旋转&lt;br/&gt; &lt;div id=&quot;test&quot;&gt;&lt;/div&gt; jsvar obj = document.getElementById(&quot;test&quot;); function scale(d) { //改变缩放系数 d = d / 100; obj.style.setProperty(&quot;--scale&quot;, d); } function rotate(d) { //改变2D旋转角度 obj.style.setProperty(&quot;--rotate&quot;, d + &quot;deg&quot;); } function rotateX(d) { //改变3D X轴旋转角度 obj.style.setProperty(&quot;--rotateX&quot;, d + &quot;deg&quot;); } function rotateY(d) { //改变3D Y轴旋转角度 obj.style.setProperty(&quot;--rotateY&quot;, d + &quot;deg&quot;); } function rotateZ(d) { //改变3D Z轴旋转角度 obj.style.setProperty(&quot;--rotateZ&quot;, d + &quot;deg&quot;); } 总结ok，原理很简单，只要将每个属性要转换的系数用css变量去定义，当我们想要动态改变时，通过js去改变对应的css变量即可。有关于前端技术，其实很多技术并不十分困难，关键在于巧妙的运用。奇思妙想，总能让人有眼前一亮的感觉。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[数组的复制]]></title>
      <url>%2F2018%2F04%2F04%2FarrObjectCopy%2F</url>
      <content type="text"><![CDATA[数组是对象，属于引用类型，简单的赋值只是添加了一个指向数组的指针。当改变新的赋值对象时，原有的数组也会被改变。 简单的赋值 错误的复制1234var a = [1,2,3];var b = a; //a赋值给b，因为数组是对象，属于引用类型，此处只是添加了一个指向数组的指针b.push(4); //向b中添加一个新的元素console.log(a，b)； //结果都是[1,2,3,4]，a也被改变了 正确的复制1234var a = [1,2,3];var b = a.slice();//取出a中的所有元素，赋值给bb.push(4); //向b中添加一个新的元素console.log(a，b)； //结果都是[1,2,3]，[1,2,3,4]，只有b被改变]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[love]]></title>
      <url>%2F2018%2F03%2F15%2Flove%2F</url>
      <content type="text"><![CDATA[love（代码来源：http://www.jq22.com） 爱情是个什么玩意儿樱花飘舞表白动画]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[css变量的使用]]></title>
      <url>%2F2018%2F02%2F23%2FvarCSS%2F</url>
      <content type="text"><![CDATA[在任何语言中，变量的有一点作用都是一样的，那就是可以降低维护成本，附带还有更高性能，文件更高压缩率的好处。在css中我们也可以灵活的使用变量。 语法CSS中原生的变量定义语法是：--*，变量使用语法是：var(--*)，其中*表示变量名称。 命名规范css变量命名稍显宽松，只要不包含$，[，^，(，%等字符，普通字符局限在只要是“数字[0-9]”“字母[a-z A-Z]”“下划线_”和“短横线-”这些组合，甚至可以是中文，日文或者韩文。 CSS变量作用域 变量也是跟着CSS选择器走的，如果变量所在的选择器和使用变量的元素没有交集，是没有效果的。如果想全局使用变量，可以设置在:root选择器上； 当存在多个同样名称的变量时候，变量的覆盖规则由CSS选择器的权重决定的，但并无!important这种用法，因为没有必要，!important设计初衷是干掉JS的style设置，但对于变量的定义则没有这样的需求。 /*在这里申明css全局变量*/ :root { --x: green; } /*使用变量*/ div { --x: red; /*内部，单独声明了变量*/ color: var(--x); /*red*/ } p { color: var(--x); /*green*/ } a { color: var(--x); /*green*/ } CSS变量的空格尾随特性即在使用var(--*)，编译出来时，其后是默认尾随一个空格的。错误示例： body { --temp: 20; font-size: var(--temp)px; } 相当于： body { font-size: 20 px; } 是错误的写法。正确示例如下： body { --temp: 20px; font-size: var(--temp); } 或使用 CSS3 calc()计算： body { --temp: 20; font-size: calc(var(--temp) * 1px); } CSS变量的相互传递特性变量是可以赋值给变量的，就像a=1,b=a,c=b =》 c=1 body { --a: #4CAF50; --b: var(--a); color: var(--b) } css变量使用的完整语法格式：var(自定义变量名, 默认值)如果使用的变量没有定义，则使用后面的值作为元素的属性值。！注意：仅限于没有定义，即自定义变量名不存在时，才会启用后面的默认值；若自定义变量名，存在，对于CSS变量，只要语法是正确的，就算变量里面的值是个乱七八糟的东西，也是会作为正常的声明解析，并不会启用后面的默认值，而是使用该属性本身的默认值。下面一个问题可以解释css变量完整语法的用法： body { --c: 20px; background-color: red; background-color: var(--c, green); } 此时的背景色是（）？ A. transparent B. 20px C. red D. green 20px这个变量值对于background-color属性来说，显然是不合法的。答案是…………………………A. transparent所以，为了不自找麻烦，请避免使用不合法的变量值。 附上原文链接：http://www.zhangxinxu.com/wordpress/2016/11/css-css3-variables-var/]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[swiper]]></title>
      <url>%2F2018%2F02%2F11%2Fswiper%2F</url>
      <content type="text"><![CDATA[上次用swiper轮播还是3，没注意看官网，才几个月已经升级到4了，多了很多实用的功能。比如缩略图控制、滑动侧边栏、滑动导航、上下拉刷新、Animate等等，很好用。 官方传送门（自己去看）]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[哈~]]></title>
      <url>%2F2018%2F02%2F11%2Fnothing%2F</url>
      <content type="text"><![CDATA[越来越…… 懒了]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[hexo安装和部署]]></title>
      <url>%2F2018%2F01%2F10%2FhexoInstall%2F</url>
      <content type="text"><![CDATA[因为要换电脑，重新整理了下hexo，顺便写一篇。 GitHub账号首先，你得有一个github账号，建立一个Repository。注意名字要叫做：账号名.github.io。建好后得到一个地址，这个就是上传本地文件/拉取线上文件的地址。 安装git工具网上搜索git，下载安装即可。 安装node网上搜索node，下载安装即可。 通过cmd命令安装hexonpm install hexo-cli -g 通过cmd命令建立本地博客hexo init blog //建立文件夹，blog为文件夹名称，可另取 cd blog //进入文件夹 npm install //安装 hexo server //运行 在浏览器地址栏输入：localhost:4000 ，即可访问 写文章在blog\source_posts文件夹下，新建md文件，打开并编辑文章（去网上搜索并下载安装一款markdown编辑器，比如MarkdownPad2） 上传打开blog文件夹下_config.yml文件，找到以下内容并修改 deploy: type: git repo: https://github.com/kexiaohei/kexiaohei.github.io.git branch: master 通过cmd命令安装部署工具npm install hexo-deployer-git --save 通过cmd命令部署hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 通过cmd命令部署访问地址：账号名.github.io。 建立git分支部署完成后，github已经上有了编译后的文件和代码。为了更换电脑时博客文件的迁移，我们还可以在当前git再建立一个分支，然后将本地整个blog文件夹的内容上传到分支上。这样，当更换电脑，迁移博客文件时，我们只需从git分支上拉取即可。注意修改本地文件时，不仅要通过cmd命令发布，也要通过git工具将修改内容上传到git分支。 迁移到新电脑的操作 确保安装好了git和node 将git上建立的分支拉取到本地 win+R打开cmd命令安装hexo：npm install hexo-cli -g 通过cmd进入本地博客文件夹（git分支拉取到本地的文件夹），执行：hexo s 通过浏览器访问localhost:4000 其他基本的建立已经完成了，还有其他主题下载，_config.yml文件的配置，域名的解析等可自行探究。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[几个小游戏]]></title>
      <url>%2F2017%2F10%2F18%2Fgames%2F</url>
      <content type="text"><![CDATA[几个小游戏（代码来源：http://www.jq22.com） 几个小游戏别踩白块儿碎片射击星球大战首尾相连飞行游戏]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[js关于数字]]></title>
      <url>%2F2017%2F08%2F22%2Fjinzhi%2F</url>
      <content type="text"><![CDATA[发现一个小坑，也不算是真的坑，是个比较隐秘的知识点吧，注意点就可以。 写了一个数组 1var arr = [000253,600987,600875,600001,000001,000658,000257]; 结果 1[171, 600987, 600875, 600001, 1, 658, 175] 前面的0不见了，并且000253变成了171，000257变成了175，这因为这两个数字被识别成了8进制。这里要注意的是，数字前面有0就不能作为整型了，应该加上引号作为string类型。 1var arr = ['000253','600987','600875','600001','000001','000658','000257']; 还有另一个关于数字的js计算 10.1 * 0.4; 结果 10.04000000000000001 所以，总结一下，数字经过js处理后尽量不要参与业务，只做展示用。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[鬼之歌]]></title>
      <url>%2F2017%2F08%2F20%2Fghost%2F</url>
      <content type="text"><![CDATA[推荐歌曲《百鬼夜行》——音频怪物、《招魂·白骨地》——雾敛。听了很有感觉，就根据歌词内容，整理了下对话，尝试还原鬼故事。 百鬼夜行女：你是谁啊？别拉着我。 男：嘘，别说话，跟我来…… 那个人，那个人是鬼，它没有影子。小心，千万，千万别被它看到，否则怎么死的都不知道。 女：鬼？你说的是谁？ 男：诶？人呢？我刚才看到那个人没有影子。 女：我也没有影子。 男：什么？你是……你是鬼？！ 女：是啊，影子算什么，你不是也没有吗？ 男：我……影子……诶……影子呢？我的影子呢？ 女：大约是跟着你的尸体吧？ 男：什……什么？ 女：呐，飘在湖水里那个，不就是你的尸体吗？ 喔呜~~~~ 女：呀，天亮了。 招魂·白骨地女：你跑什么？ 男：他们，他们要打断我的手！我……我偷了东西。 女：你偷了什么？ 男：一个包子……我快要饿死了。 女：停下来吧，他们不会再追过来了。 男：为……为什么？ 女：再往前走，就是白骨地了…… 男：你是谁啊？怎么会在这儿？ 女：我，我也是逃过来的。 男：你也是偷了东西吗？ 女：我什么都没有做。有个恶霸，要娶我的女儿，我不答应…… 男：那，后来呢？ 女：人们说我通奸，谋害亲夫，我遭了浸猪笼。 男：那，你是怎么逃出来的？ 女：不……我没有……逃出来…… 三更了…… 女：看，他们来了。 众鬼：留下来吧……留下来吧…… 女：少年郎，留下来吧。外面的世界，远比这里，更可怕。 众鬼：留下来吧……留下来吧……]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[项目]]></title>
      <url>%2F2017%2F07%2F31%2Fprojects%2F</url>
      <content type="text"><![CDATA[前端项目展示 赢家策略（PC）http://vip.tdtz888.com （线上）用户：test密码：test 赢家策略（手机）http://vip.tdtz888.com （线上）用户：test密码：test 推广站(手机)http://tg.yngw518.com （线上） 客服聊天系统（for客服）（PC）http://h5test.tdtz888.com/serverIm （测试） 客服聊天系统（for客户）（手机）http://h5test.tdtz888.com/serverImPhone （测试） 推广页_“大揭秘”（手机）http://h5test.tdtz888.com/tuiGuangPage/1_secret/index.html （测试） 推广页“免费牛股微信”（手机）http://h5test.tdtz888.com/tuiGuangPage/2_freeNiuGu/index.html （测试）http://v.tthaogu.com/m_ltgbg/index.html （线上） 推广页“免费牛股电话”（手机）http://h5test.tdtz888.com/tuiGuangPage/2_freeNiuGu/index2.html （测试）http://v.tthaogu.com/m_ltgbg/index2.html （线上） 推广页_文章http://h5test.tdtz888.com/tuiGuangPage/article/index.html （测试） 巴菲特喊你加入“与牛共舞”投资大佬好友群(微信)http://bafeite.yngw518.com （线上） 天鼎投牛道人微信网站(微信)http://h5test.tdtz888.com/tdtzndr （页面测试）http://niudaoren.yngw518.com/index.php/Home/Article/index.html （线上） 天鼎投资牛股赢微信网站(微信)http://h5test.tdtz888.com/ngy （页面测试）http://vip.tdtz888.com/ngwin.php?g=Ngwin （线上） PC首页http://h5test.tdtz888.com/PC/index.html （页面测试） 中汇财经微信网站(微信)http://h5test.tdtz888.com/zhcj （页面测试）]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[做一个心平气和的程序员]]></title>
      <url>%2F2017%2F07%2F30%2Fpeaceful%2F</url>
      <content type="text"><![CDATA[程序员是一个弱势群体，头上压着很多大山，工作中会与各种群体触发矛盾，与项目经理的矛盾，与产品经理的矛盾，与美工的矛盾，与客户的矛盾……甚至程序员之间也有矛盾。面对着矛盾，脾气火爆的程序员会当场爆发，更多的程序员一忍再忍，最后触底爆发，也有直到猝死也没有爆发的。然而，这并不是正确的态度，我们应该做一个心平气和的程序员。 保持平和的心态然而面对着各种矛盾，如何才能保持一个平和的心态。首先，我们应该知道，作为一个优秀的程序员，我们的智商是远远高出人均值的。比我们智商高的人也有很多，但很显然聪明人之间的交流绝对是高效的，甚至不会浪费多余的精力去争吵。所以一切引起你不适的人都是傻叉、fool、idiot、stupid gay！然而，我们程序员是一个高尚的群体，每一个都是一个高尚的人，一个纯粹的人，一个有道德的人，一个脱离了低级趣味的人，一个有益于人民的人。我们有能力，也有责任，去包容，去引导那些傻叉走上正确的共产主义道路。 虚心要知道傲慢是大敌，即使一只蚂蚁也能给予人类智慧的启发。我们要深入到人民群众中去，放低自己的姿态，虚心的去发掘那些傻叉身上的发光点，不耻下问。 明确自己的目的要时刻知道自己的目的是为了让项目变得更好，是解决问题，而不是推卸责任。当问题发生时，我们首先要去检查自己的代码，去思考更好的解决方案。直到确认无误，我们发现是傻叉不会开关机，我们才可以理直气壮的说：“你这个傻叉！” 可以争论但不争吵当发生矛盾时，永远不要代入情绪。争论是为了找出问题的根本，并找出解决方法；而争吵毫无意义，只会被同化成傻叉。 学会引导傻叉当傻叉提出一个傻叉的需求时，我们知道不能这样做或者技术做不到。我们需要静下心来去了解傻叉的想法，然后引导傻叉使用另一种正确的方式，去达到傻叉想要的效果。因为傻叉终究是傻叉，我们不能被傻叉牵着鼻子走，永远不要让傻叉说出具体怎么做，而是我们去了解傻叉的想法，然后去引导傻叉按照我们的方式去达到他想要的效果。这点更适用与产品经理和老板的关系，通常做到这一点的产品经理我们会免去其傻叉的称号，然而大部分的产品经理都只是老板的听话虫。 大部分用户都是傻叉相信你的程序所面对的大部分用户都是傻瓜，他们中有些人甚至都不知道怎么切换输入法。所以程序中该提示的得提示，该标注的得标注，稍微复杂一点的还得准备个用户手册。这样当他们密码输错导致无法登录的时候，就不会叫着出bug了。不要说这不是程序员的锅，而是产品的设计不符合人性化。也许我们可以兼职做产品，然后可以拿两份工资，并且少面对一个傻叉。这个想法不太现实，但梦想还是可以有的。 未完待续……]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[自定义滚动区域在ios上滑动卡顿问题]]></title>
      <url>%2F2017%2F07%2F29%2Fscrolling%2F</url>
      <content type="text"><![CDATA[我们都知道有一个css属性叫做“overflow: auto;”，通过这个属性我们可以自定义滚动区域，当内容超出这个区域即出现滚动条。然而这个滚动区域过长时，在ios上滑动的时候会出现卡顿问题，滑动效果很差。 解决这个问题很简单，添加一个css属性-webkit-overflow-scrolling即可解决，明显提升滑动效果。代码如下： 1234.u-scroll &#123; overflow: auto; -webkit-overflow-scrolling: touch;&#125; 有强迫症的的童鞋可以这样写： 1234.u-scroll &#123; overflow: auto !important; -webkit-overflow-scrolling: touch !important;&#125;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[上下拉刷新插件（依赖于jquery或zepto）]]></title>
      <url>%2F2017%2F07%2F29%2Fdroploaddist%2F</url>
      <content type="text"><![CDATA[介绍一个html5移动端上下拉刷新插件，依赖于jquery或者zepto。 最近比较懒，就不详细介绍了，大家可以自行百度droploaddist，也可以下载源码和案例。传送门：原作者：http://ons.me/526.html源码和demo：https://github.com/ximan/dropload 下面是简单代码示例：引入文件(依赖库zepto或jquery两者选一)123&lt;link rel="stylesheet" type="text/css" href="droploaddist/dropload.css"&gt;&lt;script type="text/javascript" src="js/zepto.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript" src="droploaddist/dropload.min.js"&gt;&lt;/script&gt; html部分123456&lt;div id="listDiv"&gt; &lt;div class="li"&gt;新闻&lt;/div&gt; &lt;div class="li"&gt;新闻&lt;/div&gt; &lt;div class="li"&gt;新闻&lt;/div&gt; &lt;div class="li"&gt;新闻&lt;/div&gt;&lt;/div&gt; js部分12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455//上下拉刷新的区域 var $scrollArea = $(window); var $dropDiv = $('#listDiv'); $dropDiv.dropload(&#123; scrollArea: $scrollArea,//滚动条滑动的区域 threshold: 50, loadUpFn: function (me) &#123; //刷新整个页面 window.location.reload(); setTimeout(function () &#123; me.resetload(); &#125;, 500); &#125;, loadDownFn: function (me) &#123; var $last = $dropDiv.find(".li").last();//最后一条元素 var lastId = $last.data("id");//最后一条元素的data-id if (!lastId) &#123; //如果不存在last_id me.lock();// 锁定 me.noData();// 无数据 me.resetload();// 重置页面刷新状态 return; &#125; var url = ""; $.ajax(&#123; type: "post", url: url, data: &#123; last: lastId &#125;, dataType: "json", success: function (ret) &#123; var listHtml = ret;//返回的html列表 if (listHtml &amp;&amp; listHtml.length) &#123; //一定时间显示加载效果 setTimeout(function () &#123; // 在页面最后一条之后插入新的html数据 $last.after(listHtml); // 每次数据插入，必须重置 me.resetload(); &#125;, 300); &#125; else &#123; me.lock();// 锁定 me.noData();// 无数据 me.resetload();// 重置页面刷新状态 &#125; &#125;, error: function (xhr, type) &#123; me.lock();// 锁定 me.Err();// 出错了 me.resetload();// 即使加载出错，也得重置 &#125; &#125;); &#125; &#125;); 需要说明一下的是，.Err()方法是我修改源码添加的一个方法，源码里并没有，效果就是底部出现“出错了(；′⌒`)！”。和.noData()方法是一个原理，有这个需求的同学模仿源码里.noData()方法来添加一个新的方法即可。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[污段子]]></title>
      <url>%2F2017%2F07%2F28%2Fwu%2F</url>
      <content type="text"><![CDATA[看到费玉清讲的一个污段子，来给大家分享一下…… 有一个老太太开了一家情趣用品商店。一天夜里，看见一个妇女在门外张望。 老太太想生意来了，赶紧招手：“哎，进来进来，没关系，别不好意思。” 女人慢慢挪着步子，就走进去了，期期艾艾的说：“喔，你们这里有没有，有，有没有…” 老太太就说：“哎哟，别不好意思嘛，又不是十七八岁了，不要害羞了，说话还颤抖的。我看你有一点年纪了，应该有这个需求的。没关系，你跟我讲，要什么款式的都有。” 女人就小声说：“XXX” 老太太一听，拍手道：“我懂，我看你真是害羞啊，说话还一直颤抖的。你看，三段式的，这个好不好。” 一边说着，老太太拿出一个不可描述的物件，打开开关，”滋滋滋滋……”，“你看这个是弱”，又按了一下，“污嗡嗡翁……污嗡嗡翁……”，“这个是强……” “喔，我知道的，三段式的嘛”，女人说。 “对对对，便宜又好又耐用……”，老太太赶忙道。 “不，不是啦，我，我，我是想问你，怎，怎么关掉……”，女人说话带着颤音。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[以牙还牙]]></title>
      <url>%2F2017%2F07%2F28%2Ftooth%2F</url>
      <content type="text"><![CDATA[相传，在古代英国亚瑟王（男）时代，大法官非常仰慕王后美丽迷人的胸脯，但他知道猥亵王后的代价是死亡。他把自己的秘密告诉了亚瑟王的御医。御医答应帮他实现他的欲望，代价是大法官付给御医一千金币。于是…… 御医配制了一种痒痒水。一天，趁王后洗澡时，把痒痒水抹在了王后的胸罩上。王后穿上衣服后，感到胸脯奇痒难忍。亚瑟王急忙传御医给王后看病。御医说这是一种怪病，要解痒，只有用一个人的唾液，要让这个人在王后的胸脯上添上四个小时。这个人便是大法官。 亚瑟王急忙传大法官进宫为王后治病。御医已经把解痒的药放在了大法官的嘴里。于是，大法官终于实现了他长久以来的欲望，在王后美丽的胸脯上足足舔了四个小时。大法官过足了瘾，王后的病也治好了。 大法官回到家里，御医赶来向他索要报酬。大法官已经过足了瘾，而且断定御医不敢把事情说出去，于是便赖账不给。御医愤愤离去，发誓要让大法官付出代价。于是，他又配制了一些痒痒水。这天，他趁亚瑟王洗澡的时候，把痒痒水涂在了国王的内裤上。 第二天，亚瑟王又传大法官进宫了……]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[回到顶部火箭特效]]></title>
      <url>%2F2017%2F07%2F26%2Frocket%2F</url>
      <content type="text"><![CDATA[在页面右下角做一个火箭形状的按钮，只有当页面滚动条不在顶部时才显示，点击要有火箭发射的效果，同时页面滚动到顶部。 难点就在于火箭特效，上网看了一个例子用css做的，代码多且复杂，效果也不是很完美，索性自己做了一个，动画主要使用CSS3动画去完成，代码简单易懂。 html部分代码1&lt;div id="backTop" onclick="backToTop(this);"&gt;&lt;/div&gt; css代码使用了css3的animation属性，现在应兼容大部分浏览器，如遇不兼容，可自行搜索兼容写法123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#backTop &#123; position: fixed; bottom: 2rem; right: 1rem; display: none; z-index: 99; cursor: pointer; border-radius: .2rem; width: 8rem; height: 15rem; /*常态 显示灰色火箭图片*/ background: url("../image/rocket/rocket_button_up_01.png") no-repeat 0 0; background-size: contain;&#125;#backTop:hover &#123; /*当鼠标移动到火箭按钮上面时，显示亮色火箭图片*/ background-image: url("../image/rocket/rocket_button_up_02.png");&#125;#backTop.launch &#123; animation: launch 1s ease-in-out;&#125;@keyframes launch &#123; 0% &#123; /*火箭发射图片，带火焰1*/ background-image: url("../image/rocket/rocket_button_up_03.png"); bottom: 2rem; &#125; 15% &#123; /*火箭发射图片，带火焰2*/ background-image: url("../image/rocket/rocket_button_up_04.png"); bottom: 2rem; &#125; 30% &#123; /*火箭发射图片，带火焰3*/ background-image: url("../image/rocket/rocket_button_up_05.png"); bottom: 2rem; &#125; 45% &#123; /*火箭发射图片，带火焰4*/ background-image: url("../image/rocket/rocket_button_up_06.png"); bottom: 2rem; &#125; 100% &#123; /*火箭发射图片，带火焰4*/ background-image: url("../image/rocket/rocket_button_up_06.png"); bottom: 1200px; &#125;&#125; js代码1234567891011121314151617181920212223242526&lt;script type="text/javascript" src="js/jquery-3.1.1.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt; $(document).ready(function () &#123; var $container = $(window); var topH = 50; //顶部高度 var $backTop = $("#backTop"); //滚动到顶部的按钮元素 //监听滚动条，只有当滚动条高度大于设定的顶部高度时才显示按钮 $container.scroll(function () &#123; var afterScrollTop = $container.scrollTop(); if (afterScrollTop &gt;= topH) &#123; $backTop.show();//显示按钮 &#125; else &#123; $backTop.hide();//隐藏按钮 &#125; &#125;); &#125;); //点击了火箭按钮的回调，触发发射特效，页面滚动回顶部 function backToTop(ele) &#123; $(ele).addClass("launch");//触发发射特效 setTimeout(function () &#123; $('html,body').animate(&#123;scrollTop: 0&#125;, 300); $(ele).removeClass("launch");//结束后取消发射特效 &#125;, 800); &#125;&lt;/script&gt; 点我查看演示完成了，去试试吧，火箭图片下载地址：http://pan.baidu.com/s/1qYuhnJ2]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[微信reload问题]]></title>
      <url>%2F2017%2F06%2F30%2FweiXinReload%2F</url>
      <content type="text"><![CDATA[页面上有一个按钮，点击的时候执行window.location.reload()，正常情况reload()后会刷新当前页面地址，但在安卓的微信浏览器中reload后，通过fiddler抓包发现，并没有发送请求。应该是微信缓存的问题。 解决方法就是给url后添加一个随机数变量，常用的是添加一个时间戳变量。 给url添加时间戳变量1234567891011121314151617181920212223242526function updateUrl() &#123; var url = window.location.href; var key = 'refreshTimestamp='; //默认是"t" var reg = new RegExp(key + '\\d+'); //正则：t=1472286066028 var timestamp = +new Date(); if (url.indexOf(key) &gt; -1) &#123; //有时间戳，直接更新 return url.replace(reg, key + timestamp); &#125; else &#123; //没有时间戳，加上时间戳 if (url.indexOf('\?') &gt; -1) &#123; var urlArr = url.split('\?'); if (urlArr[1]) &#123; return urlArr[0] + '?' + key + timestamp + '&amp;' + urlArr[1]; &#125; else &#123; return urlArr[0] + '?' + key + timestamp; &#125; &#125; else &#123; if (url.indexOf('#') &gt; -1) &#123; return url.split('#')[0] + '?' + key + timestamp + location.hash; &#125; else &#123; return url + '?' + key + timestamp; &#125; &#125; &#125;&#125; 刷新12//window.location.reload(); window.location.href = updateUrl();]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[移动端实现UI设计稿的等比例适配]]></title>
      <url>%2F2017%2F06%2F20%2FreCalc%2F</url>
      <content type="text"><![CDATA[从美工那里拿到UI高保真图之后，前端需要根据这个图编写代码。然而图只是一张图，编写出来的代码却是要在不同设备里展现页面的。怎样让你编写的代码在不同设备里呈现的页面，始终和高保真图保持等比例呢？ viewport首先，为了适配移动端设备，肯定要在head里加上viewport。 1&lt;meta name="viewport" content="width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no,initial-scale=1.0"/&gt; 单位（px、em、rem）其次，我们需要了解几个单位的区别 pxpx像素（Pixel）。相对长度单位。像素px是相对于显示器屏幕分辨率而言的。特点： IE无法调整那些使用px作为单位的字体大小； 国外的大部分网站能够调整的原因在于其使用了em或rem作为字体单位； Firefox能够调整px和em，rem，但是96%以上的中国网民使用IE浏览器(或内核)。 emem是相对长度单位。相对于当前对象内文本的字体尺寸。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸。特点: em的值并不是固定的； em会继承父级元素的字体大小。 remrem是CSS3新增的一个相对单位（root em，根em），这个单位引起了广泛关注。这个单位与em有什么区别呢？区别在于使用rem为元素设定字体大小时，仍然是相对大小，但相对的只是HTML根元素。这个单位可谓集相对大小和绝对大小的优点于一身，通过它既可以做到只修改根元素就成比例地调整所有字体大小，又可以避免字体大小逐层复合的连锁反应。目前，除了IE8及更早版本外，所有浏览器均已支持rem。 js动态计算根节点的font-size了解了以上三个单位的区别，我们知道应该选择rem，这样只需要动态计算html根元素的大小，就可以改变整个文档内rem的大小，即可实现等比例的缩放。假设设计稿是宽750px来做的，书写css方便计算考虑，根节点的font-size假定为100px，得出设备宽为7.5rem。设计稿中标注的任何px数值都可以换算成px/100的rem值。就是说，每一个设备的宽度都定为7.5个rem，然后宽度非750px的设备里，就需要用JS对font-size做动态计算。换算关系为：根节点的font-size=设备宽度/7.5。代码如下： 1234567891011121314&lt;script&gt; (function (doc, win) &#123; var docEl = doc.documentElement, resizeEvt = 'orientationchange' in window ? 'orientationchange' : 'resize', reCalc = function () &#123; var clientWidth = docEl.clientWidth; if (!clientWidth) return; docEl.style.fontSize = 100 * (clientWidth / 750) + 'px'; &#125;; if (!doc.addEventListener) return; win.addEventListener(resizeEvt, reCalc, false); doc.addEventListener('DOMContentLoaded', reCalc, false); &#125;)(document, window);&lt;/script&gt; 以上代码应在head内，所有css和js之前。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[图片懒加载和预加载原理]]></title>
      <url>%2F2017%2F06%2F17%2FimgPreLoad%2F</url>
      <content type="text"><![CDATA[什么是图片懒加载？图片懒加载就是，一个Html文档加载后，其中的图片不即时加载，而是根据自己设定的条件加载，如滑动到可视区域加载图片，或点击后才加载图片；图片预加载的原理更明白，即在html中的img标签加载之前，先将图片资源下载到本地。 预加载方法很简单，在网页加载之前，先获得网页中的所有图片资源地址，并加载。下载图片的资源代码如下。 12345//图片预加载 function preLoadImg(url) &#123; var img = new Image(); img.src = url; &#125; 关键是懒加载，如何在图片加载到页面之前，先获取到图片地址，再加载。这里巧妙的利用了data-自定义属性，在图片的src中写空，或填写一个默认图片，真实的图片地址写入data-自定义属性中，先获取到data-*的内容，达到加载条件后，再加载或直接填入到src中，即可显示在页面。图片懒加载可以使用jquery.lazyload插件，很成熟的插件，有很多效果可以使用。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[MarkdownPad自动生成带有侧边目录的文档]]></title>
      <url>%2F2017%2F06%2F17%2FMarkdownPadToc%2F</url>
      <content type="text"><![CDATA[看了很多markdown生成侧边目录的方法，大多依赖复杂的环境，终于找到一个比较简单的方法。 我一直使用的MarkdownPad这个Markdown语法编辑器，很实用。就基于这个编辑器来介绍吧。 在head里引入文件打开MarkdownPad，点击 工具 》》选项 》》高级 HTML Head 编辑器 》》粘贴以下代码1234567891011121314151617181920212223&lt;!--ztree生成侧边目录--&gt;&lt;link rel="stylesheet" type="text/css" href="http://i5ting.github.io/git-quick-start/preview/style/zTreeStyle/zTreeStyle.css"&gt;&lt;script type="text/javascript" src="http://i5ting.github.io/git-quick-start/preview/js/jquery-1.10.2.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript" src="http://i5ting.github.io/git-quick-start/preview/js/jquery.ztree.all-3.5.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript" src="http://i5ting.github.io/git-quick-start/preview/js/jquery.ztree_toc.js"&gt;&lt;/script&gt;&lt;SCRIPT type="text/javascript"&gt; $(document).ready(function () &#123; $('#tree').ztree_toc(&#123; is_auto_number: true, documment_selector: '.markdown-body', ztreeStyle: &#123; width: '260px', overflow: 'auto', position: 'fixed', 'z-index': 2147483647, border: '0px none', left: '0px', top: '0px' &#125; &#125;); &#125;);&lt;/SCRIPT&gt; 编辑markdown文档在空白的markdown文档中添加一下内容，在中间正常使用Markdown语法，编写内容即可。最后生成的Html会基于文章的标题（H1，H2，H3，H4，H5……）自动生成目录，且会自动生成编号，非常好用。1234&lt;ul id="tree" class="ztree"&gt;&lt;/ul&gt;&lt;article class='markdown-body'&gt; 写markdown内容&lt;/article&gt;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[clipboard.js实现复制粘贴]]></title>
      <url>%2F2017%2F05%2F25%2Fclipboard%2F</url>
      <content type="text"><![CDATA[最近要做一个功能：”js自动选择文本并复制到剪切板”,发现除了IE，其他浏览器都禁止了js对剪切板的直接操作。然而网上的点击按钮复制一段代码或文本是怎么做到的呢？仔细研究了下，发现是使用了flash技术去实现的，然而手机端浏览器对flash并不友好,所以并不适用于手机端。仅仅是复制文本不应该用太过复杂的方式去实现，这样得到的结果与付出的成本并不成正比，最后终于找到一个技术clipboard.js实现复制粘贴，无需Flash无需依赖任何JS库实现文本复制与剪切。 复制文本到剪切板不再那么复杂，也不需要繁琐的配置或者加载臃肿的插件；最重要的，不再依赖Flash或者庞大的组件。这就是clipboard.js存在的意义。官方地址：https://clipboardjs.com/中文网：http://clipboardjs.52fhy.com/ 引入clipboard12&lt;script src="dist/clipboard.min.js"&gt;&lt;/script&gt; Html部分将要复制的元素，绑定到按钮上（按钮也可以替换成div）。 123&lt;span id="demo" oncopy="copySucceed(this)"&gt;要复制的内容&lt;/span&gt;&lt;button id="copyBtn" data-clipboard-action="copy" data-clipboard-target="#demo"&gt;点击复制&lt;/button&gt; 通过data-clipboard-action 属性来指定是 复制(copy) 还是 剪切(cut) 操作。注意：剪切(cut) 操作仅适用 &lt;input&gt; 或 &lt;textarea&gt; 元素，默认是 复制(copy)。 使用 data-clipboard-target 属性指定被复制的内容 js部分绑定按钮，实例化Clipboard对象 12new Clipboard('#copyBtn'); 成功这时点击按钮已经可以选中文本并复制了！]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[百度搜索特效关键词]]></title>
      <url>%2F2017%2F05%2F23%2FbaiduEffect%2F</url>
      <content type="text"><![CDATA[在百度搜索首页http://www.baidu.com，搜索特定的词汇出现好玩的效果，今天闲来无事找出几个词汇，分别试验了一下。挺好玩的，这也许是程序员的小浪漫吧。 黑洞出现一个黑洞，将这个页面吸进去 旋转页面会360度旋转 反转/翻转页面会反转成镜像 淡入页面淡入效果 抖动/晃动/摇一摇/duang页面会抖动 打雷会有打雷的声音 海边会有海浪的声音 大风会有刮风的声音 布谷鸟会有布谷鸟的叫声 也许还有其他效果，大家自己去发现吧。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[移动前端手机输入法自带emoji表情字符处理]]></title>
      <url>%2F2017%2F05%2F16%2FemojiHandle%2F</url>
      <content type="text"><![CDATA[遇到一个问题，移动端输入emoji表情无法存储到数据库。手机输入法里自带的emoji表情，应该是某些特殊字符，但是为什么会无法存储到数据库呢？是因为emoji用到的字符是4字节的utf-16（utf-16有2字节和4字节两种编码），而数据库一般是采用的utf-8，并且最大只允许3字节的字符。这样冲突就产生了，导致emoji表情无法存储到数据库。 如何解决这个问题呢？首先需要对输入的字符进行检测，检测出表情字符，然后将其utf-16编码转换成实体编码，再存入数据库即可。详细原理可参考这篇博客http://blog.csdn.net/binjly/article/details/47321043（感谢原作者，说的很详细），这里就不多说，直接贴代码。 检测并转换123456789101112131415161718192021/** * 用于把用utf16编码的字符转换成实体字符，以供后台存储 * @param &#123;string&#125; str 将要转换的字符串，其中含有utf16字符将被自动检出 * @return &#123;string&#125; 转换后的字符串，utf16字符将被转换&amp;#xxxx;形式的实体字符 */ function utf16toEntities(str) &#123; var patt=/[\ud800-\udbff][\udc00-\udfff]/g; // 检测utf16字符正则 str = str.replace(patt, function(char)&#123; var H, L, code; if (char.length===2) &#123; H = char.charCodeAt(0); // 取出高位 L = char.charCodeAt(1); // 取出低位 code = (H - 0xD800) * 0x400 + 0x10000 + L - 0xDC00; // 转换算法 return "&amp;#" + code + ";"; &#125; else &#123; return char; &#125; &#125;); return str; &#125; ok！实际使用时，提交这个方法转换后的字符串即可。 12str = utf16toEntities(str);]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[前端技能导图]]></title>
      <url>%2F2017%2F04%2F27%2FmindMap%2F</url>
      <content type="text"><![CDATA[闲来无事，整理了一下前端开发的技能学习导向。主要从自己角度来思考的，算是对自己技能的一个总结和规划吧，对一些前端初学者也应该有一定的帮助。一时想不起太多，暂时总结这么多，以后有空再补充。（ps：使用百度脑图画的，真的很好用） (PS：图片内容太多，字小可能看不清。pc端的可以右击图片，选择在新的窗口打开，点击放大查看；移动端的可以双指向外滑动放大网页查看)]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[震惊！先父遗传]]></title>
      <url>%2F2017%2F04%2F22%2Ftelogony%2F</url>
      <content type="text"><![CDATA[是真的震惊，不是故意用的震惊体。最近在小说中看到一个名词“先父遗传”，坑爹的作者也不在小说中解释一下名词，无奈实在好奇就去查了一下，然后，我感觉我发现了不得了的事…… 词汇本意先父遗传英文名叫做：Telogony。Telogony一词本意是奥德修斯儿子的名字。在神话telegonia中，奥德修斯杀死了自己的儿子。 先父遗传先父遗传源于西方神话，主要表述指后代能继承亲本双方中一方的前任伴侣的特征。这是一种发生在昆虫身上的疑似现象，即澳洲的角绳。历史上再婚者的子女会有她们前任丈夫妻子的部分特征，比如：1361年英国“黑太子”爱德华婚姻受到质疑的部分理由。爱德华三世的继承人和美丽的肯特郡少女琼结婚了，而琼曾经结过婚。他们的后代被认为不完全具有金雀花王朝的血统。根据英国人类学Dr.gossipg教授的研究报告叙述，女性在性交以后，如果曾经让男性的精液進入过自己的体内，这样会让女人丧失其“最原始的纯洁基因，子宫会分泌一种液体，为精子提供能量，并让其在子宫内存活1-3天来延长其与卵子结合的机会。并且，会杀死一部份活力差的精子，达到优生的目地。 然而这是不可能的？先父遗传是一种遗传上的理论，至现在亦无定论，这个理论是说，后代能继承父母双方中一方的前任伴侣的特征，因此寡妇或再婚女人的子女会有她们前任丈夫的部分特征。这个理论被亚里士多德当作自然科学作了解释。亚里士多德相信这个理论，而在中世纪对亚里士多德的再认识中，这个理论又复苏了。叔本华和赫伯特.斯宾塞两人都认为先父遗传是可信的，然而它却被现代基因理论证明是错误的。所谓事列其实没有任何科学依据，随着遗传学、基因学、以及现代分子学得建立，先父遗传被定性为伪科学。外源DNA无法被细胞吸收，这是公认的定理。先父遗传违背了该定理。假如先父遗传成立，说明精子具有转基因功能，精子里的DNA能进入女性卵巢细胞，然而这是不可能的。外源DNA无法被细胞吸收，这是公认的定理。先父遗传违背了该定理。假如先父遗传成立，说明精子具有转基因功能，精子里的DNA能进入女性卵巢细胞，然而这是不可能的。 ？？？以上都是搜索到的资料，先不管先父遗传理论是否真实可靠，我并不是科学家，只是突然很可怜先父遗传理论的提出者，他可能有什么不为人知的故事吧？]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[横向无缝滚动（跑马灯）]]></title>
      <url>%2F2017%2F04%2F21%2FixMarquee%2F</url>
      <content type="text"><![CDATA[无缝滚动的代码很多，但我想要的一个滚动n条可以停顿一会再开始滚动，而且每条的长度都不一样，同时可以控制是否允许用户自己滑动。于是网上找了一个xMarquee.js然后加以修改，终于达到了我想要的效果。话不多说先贴上代码。 CSS部分1234567891011121314151617181920212223242526272829ul,li &#123; margin:0; padding:0; list-style-type:none;&#125;body &#123; background-color:black;&#125;.scrollleft &#123; padding:5px 20px 0px 20px; margin:2px auto;&#125;.scrollleft ul &#123; width:100000%&#125;.scrollleft li &#123; float:left; display:inline; text-align:center; line-height:24px; color:#FFFFFF;&#125;.scrollleft li a &#123; margin-right:10px;&#125;.scrollleft li:hover &#123; color:red;&#125; html部分12345678910111213141516&lt;div class="scrollleft"&gt; &lt;ul&gt; &lt;li&gt;&lt;a&gt;00000000000&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a&gt;111111111111111&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a&gt;22222222222222222&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a&gt;333333333333333333333&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a&gt;444444444444444&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a&gt;5555555555555555&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a&gt;66666666666666666666&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a&gt;777777777777777&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a&gt;888888888888&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a&gt;99999999999999999&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a&gt;aaaaaaaaaaaa&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/div&gt; js部分123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113/** * jquery ixMarquee * 依赖于jquery.js */(function($) &#123; $.fn.ixMarquee = function(options) &#123; var del = &#123; temp: -2, //滚动的长度，正整数的时候是向右滚动，负整数的时候是向左滚动（-2/2） speed: 50, //滚动的频率，单位为毫秒,数字越大速度越慢 num: 2, //每滚动2条停顿一次 delay: 5000, //一次停顿5000毫秒 onSlide: false, //是否可以手动滑动，true-是 backMarquee: function(id, content) &#123;&#125; //每滑动完一条的回调函数 @param id-li的索引 content-li的html &#125; var options = $.extend(del, options); var xM = $(this); var backMarquee = del.backMarquee; xM.each(function() &#123; var fontW = 0; var t, o; var $root = $(this); var self = $(this).find("ul:first"); var fli = self.find("li:first"); var fla = self.find("li:last"); var temp = parseInt(del.temp); var speed = parseInt(del.speed); var start = 0; for (var i = 0; i &lt; self.find("li").length; i++) &#123; self.find("li").eq(i).data("index", i); fontW += self.find("li").eq(i).width(); &#125; if (fontW &lt; $(this).width()) &#123; return; &#125; //判断如文字的长度小于显示框的长度，则不执行marquee if (temp &gt; 0) &#123; self.css(&#123; marginLeft: -self.find("li:last").width() &#125;); self.find("li:last").prependTo(self); start = -self.find("li:first").width(); &#125; function marquee() &#123; $root.css('overflow', 'hidden'); var idex, num = del.num; if (temp &lt; 0) &#123; if (-start &gt; fli.width()) &#123; start = 0; fli.appendTo(self); idex = self.find("li:first").data("index"); backMarquee(idex, self.find("li:first").html()); &#125; &#125; else &#123; if (start &gt; 0) &#123; self.find("li:last").prependTo(self); start = -self.find("li:first").width(); idex = self.find("li").eq(1).data("index"); backMarquee(idex, self.find("li").eq(1).html()); &#125; &#125; fli = self.find("li:first"); self.css(&#123; marginLeft: start &#125;); start = start + temp; if (idex % num == 0) &#123; reStart(); &#125; //停顿处 &#125; t = setInterval(function() &#123; marquee() &#125;, speed); $root.hover(function() &#123; if (o) &#123; clearTimeout(o); o = false; &#125; if (t) &#123; clearInterval(t); t = false; &#125; if (del.onSlide) &#123; $root.css('overflow', 'auto') &#125; &#125;, function() &#123; t = setInterval(function() &#123; marquee() &#125;, speed); &#125;); function reStart() &#123; //停顿 clearInterval(t); o = setTimeout(function() &#123; t = setInterval(function() &#123; marquee() &#125;, speed); &#125;, del.delay) &#125; &#125;) &#125;&#125;)(jQuery);/*初始化*/$(function() &#123; $(".scrollleft").ixMarquee(&#123; backMarquee: function(id, con) &#123; console.log(id + '**' + con); &#125; &#125;);&#125;); 注意 记得先引入jquery; ul 宽度要设为10000%，要尽可能的大，是为了让所有的li都在一行，而不会排到下一行； 不要给li加左右padding或者margin，否则一个li滑动到下一个li之间会很僵硬，这是宽度计算的问题。如果要使li之间有间隙，给其内部元素添加左右padding或者margin即可。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[box & flex]]></title>
      <url>%2F2017%2F04%2F19%2Fbox%26flex%2F</url>
      <content type="text"><![CDATA[整理了一下，关于弹性盒子或者叫流布局，box &amp; flex的兼容写法。前者是2009年的语法，已经过时；后者是2012年的语法，也是现在的标准语法。但实际情况下两者有明显的差别，在实际的浏览器测试中，flex并不能完全替代box。在开发过程中遇到很多兼容性方面的坑，因此分别整理了一下两者的兼容写法。以后可能还会有更多的坑，遇到再补充。 display：box123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657.ub &#123; display: -webkit-box; display: -moz-box; display: -ms-flexbox; display: -o-box; display: box; position: relative;&#125;.ub-ver &#123; -webkit-box-orient: vertical; -moz-box-orient: vertical; -ms-flex-direction: column; -o-box-orient: vertical; box-orient: vertical;&#125;.ub-ac &#123; -webkit-box-align: center; -moz-box-align: center; -ms-flex-align: center; -o-box-align: center; box-align: center;&#125;.ub-ae &#123; -webkit-box-align: end; -moz-box-align: end; -ms-flex-align: end; -o-box-align: end; box-align: end;&#125;.ub-pc &#123; -webkit-box-pack: center; -moz-box-pack: center; -ms-flex-pack: center; -o-box-pack: center; box-pack: center;&#125;.ub-pe &#123; -webkit-box-pack: end; -moz-box-pack: end; -ms-flex-pack: end; -o-box-pack: end; box-pack: end;&#125;.ub-f &#123; position: relative; -webkit-box-flex: 1; -moz-box-flex: 1; -ms-flex: 1; -o-box-flex: 1; box-flex: 1;&#125; display：flex123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263.uf &#123; display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex; position: relative;&#125;.uf-ver &#123; -webkit-box-orient: vertical; -webkit-flex-direction: column; -ms-flex-direction: column; flex-direction: column;&#125;.uf-ac &#123; -webkit-box-align: center; -webkit-align-items: center; -ms-flex-align: center; align-items: center;&#125;.uf-ae &#123; -webkit-box-align: end; -webkit-align-items: flex-end; -ms-flex-align: end; align-items: flex-end;&#125;.uf-pc &#123; -webkit-box-pack: center; -webkit-justify-content: center; -ms-flex-pack: center; justify-content: center;&#125;.uf-pe &#123; -webkit-box-pack: end; -webkit-justify-content: flex-end; -ms-flex-pack: end; justify-content: flex-end;&#125;.uf-pj &#123; -webkit-box-pack: justify; -webkit-justify-content: space-between; -ms-flex-pack: justify; justify-content: space-between;&#125;.uf-pja &#123; -webkit-box-pack: justify; -webkit-justify-content: space-around; -ms-flex-pack: justify; justify-content: space-around;&#125;.uf-f &#123; -webkit-box-flex: 1; -webkit-flex: 1; -ms-flex: 1; flex: 1;&#125;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[一个小游戏]]></title>
      <url>%2F2017%2F04%2F18%2Favoid-dot%2F</url>
      <content type="text"><![CDATA[一个html小游戏。不需要任何工具，复制粘贴，你就可以得到一个小游戏。用浏览器打开就可以玩。 游戏体验开始游戏 游戏代码lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head lang="en"&gt; &lt;meta charset="UTF-8"&gt; &lt;meta name="viewport" content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=no,width=device-width,initial-scale=1.0"/&gt; &lt;title&gt;avoid dot&lt;/title&gt; &lt;style type="text/css"&gt; body, html &#123; background-color: #222222; &#125; canvas &#123; border: 6px #333333 solid; background-color: #111111; &#125; .ui &#123; font-family: Arial，Helvetica, sans-serif; font-size: 10px; color: #999999; text-align: left; padding: 8px; background-color: rgba(0, 0, 0, 0.5); position: absolute; z-index: 2; &#125; #message &#123; padding: 16px; &#125; #status &#123; width: 884px; height: 15px; padding: 8px; display: none; &#125; #status span &#123; color: #bbbbbb; font-weight: bold; margin-right: 5px; &#125; #title &#123; margin-bottom: 20px; color: #eeeeee; &#125; .ui ul &#123; margin: 10px 0 10px 0; padding: 8px 0 8px 10px; &#125; .ui ul li &#123; list-style: none; &#125; .ui a &#123; outline: none; font-family: Arial, Helvetica, sans-serif; font-size: 38px; text-decoration: none; color: #bbbbbb; padding: 2px; display: block; &#125; .ui a:hover &#123; color: #ffffff; background-color: #000000; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;canvas id="world"&gt;&lt;/canvas&gt;&lt;div id="status" class="ui"&gt;&lt;/div&gt;&lt;div id="message" class="ui"&gt; &lt;h2 id="title"&gt;Instruction&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;1.Avoid dot.&lt;/li&gt; &lt;li&gt;2.Get piece.&lt;/li&gt; &lt;li&gt;3.Can hit the dots during the shield.&lt;/li&gt; &lt;li&gt;4.Be alive.&lt;/li&gt; &lt;li&gt;5.More score.&lt;/li&gt; &lt;/ul&gt; &lt;a href="#" id="startButton"&gt;Start&lt;/a&gt;&lt;/div&gt;&lt;script&gt; SinuousWorld = new function () &#123; var D = navigator.userAgent.toLowerCase(); var x = (D.indexOf("android") != -1) || (D.indexOf("iphone") != -1) || (D.indexOf("ipad") != -1); var d = x ? window.innerWidth : 900; var B = x ? window.innerHeight : 550; var h; var f; var z; var u; var K; var b; var w = []; var y = []; var H = []; var A; var t = (window.innerWidth - d); var r = (window.innerHeight - B); var J = false; var k = false; var C = 0; var m = 0; var s = &#123;x: -1.3, y: 1&#125;; var E = 1; this.init = function () &#123; h = document.getElementById("world"); z = document.getElementById("status"); u = document.getElementById("message"); K = document.getElementById("title"); b = document.getElementById("startButton"); if (h &amp;&amp; h.getContext) &#123; f = h.getContext("2d"); var L = function (N, M, O) &#123; document.addEventListener(N, M, O) &#125;; L('mousemove', c, false); L('mousedown', l, false); L('mouseup', I, false); h.addEventListener("touchstart", i, false); L("touchmove", q, false); L("touchend", v, false); window.addEventListener("resize", a, false); b.addEventListener("click", j, false); A = new Player(); a(); if (x) &#123; h.style.border = "none"; s.x *= 2; a.y *= 2; setInterval(G, 1000 / 20); &#125; else &#123; setInterval(G, 1000 / 60); &#125; &#125; &#125;; function j(L) &#123; if (k == false) &#123; k = true; w = []; y = []; C = 0; E = 1; A.trail = []; A.p.x = t; A.p.y = r; A.boost = 0; u.style.display = "none"; z.style.display = "block"; m = new Date().getTime(); &#125; &#125; function o() &#123; k = false; u.style.display = "block"; K.innerHTML = "death!(" + Math.round(C) + "score)"; &#125; function c(L) &#123; t = L.clientX - (window.innerWidth - d) * 0.5 - 10; r = L.clientY - (window.innerHeight - B) * 0.5 - 10; &#125; function l(L) &#123; J = true; &#125; function I(L) &#123; J = false; &#125; function i(L) &#123; if (L.touches.length == 1) &#123; L.preventDefault(); t = L.touches[0].pageX - (window.innerWidth - d) * 0.5; r = L.touches[0].pageY - (window.innerHeight - B) * 0.5; J = true; &#125; &#125; function q(L) &#123; if (L.touches.length == 1) &#123; L.preventDefault(); t = L.touches[0].pageX - (window.innerWidth - d) * 0.5 - 20; r = L.touches[0].pageY - (window.innerHeight - B) * 0.5 - 20 &#125; &#125; function v(L) &#123; J = false; &#125; function a() &#123; d = x ? window.innerWidth : 900; B = x ? window.innerHeight : 550; h.width = d; h.height = B; var M = (window.innerWidth - d) * 0.5; var L = (window.innerHeight - B) * 0.5; h.style.position = "absolute"; h.style.left = M + "px"; h.style.top = L + "px"; if (x) &#123; u.style.left = "0px"; u.style.top = "0px"; z.style.left = "0px"; z.style.top = "0px"; &#125; else &#123; u.style.left = M + 6 + "px"; u.style.top = L + 200 + "px"; z.style.left = M + 6 + "px"; z.style.top = L + 6 + "px"; &#125; &#125; function g(O, M, L) &#123; var N = 10 + (Math.random() * 15); while (--N &gt;= 0) &#123; n = new Particle(); n.p.x = O.x + (Math.sin(N) * M); n.p.y = O.y + (Math.cos(N) * M); n.velocity = &#123;x: -4 + Math.random() * 8, y: -4 + Math.random() * 8&#125;; n.alpha = 1; H.push(n); &#125; &#125; function G() &#123; f.clearRect(0, 0, h.width, h.height); var P = &#123;x: s.x * E, y: s.y * E&#125;; var O, M, N, L; if (k) &#123; E += 0.0008; pp = A.clonePosition(); A.p.x += (t - A.p.x) * 0.13; A.p.y += (r - A.p.y) * 0.13; C += 0.4 * E; C += A.distanceTo(pp) * 0.1; A.boost = Math.max(A.boost - 1, 0); if (A.boost &gt; 0 &amp;&amp; (A.boost &gt; 100 || A.boost % 3 != 0)) &#123; f.beginPath(); f.fillStyle = "#167a66"; f.strokeStyle = "#00ffcc"; f.arc(A.p.x, A.p.y, A.s * 2, 0, Math.PI * 2, true); f.fill(); f.stroke(); &#125; A.trail.push(new Point(A.p.x, A.p.y)); f.beginPath(); f.strokeStyle = "#648d93"; f.lineWidth = 2; for (O = 0, N = A.trail.length; O &lt; N; O++) &#123; p = A.trail[O]; f.lineTo(p.p.x, p.p.y); p.p.x += P.x; p.p.y += P.y; &#125; f.stroke(); f.closePath(); if (A.trail.length &gt; 60) &#123; A.trail.shift(); &#125; f.beginPath(); f.fillStyle = "#8ff1ff"; f.arc(A.p.x, A.p.y, A.s / 2, 0, Math.PI * 2, true); f.fill(); &#125; if (k &amp;&amp; (A.p.x &lt; 0 || A.p.x &gt; d || A.p.y &lt; 0 || A.p.y &gt; B)) &#123; g(A.p, 10); o() &#125; for (O = 0; O &lt; w.length; O++) &#123; p = w[O]; if (k) &#123; if (A.boost &gt; 0 &amp;&amp; p.distanceTo(A.p) &lt; ((A.s * 4) + p.s) * 0.5) &#123; g(p.p, 10); w.splice(O, 1); O--; C += 10; continue; &#125; else &#123; if (p.distanceTo(A.p) &lt; (A.s + p.s) * 0.5) &#123; g(A.p, 10); o(); &#125; &#125; &#125; f.beginPath(); f.fillStyle = "#ff0000"; f.arc(p.p.x, p.p.y, p.s / 2, 0, Math.PI * 2, true); f.fill(); p.p.x += P.x * p.f; p.p.y += P.y * p.f; if (p.p.x &lt; 0 || p.p.y &gt; B) &#123; w.splice(O, 1); O--; &#125; &#125; for (O = 0; O &lt; y.length; O++) &#123; p = y[O]; if (p.distanceTo(A.p) &lt; (A.s + p.s) * 0.5 &amp;&amp; k) &#123; A.boost = 300; for (M = 0; M &lt; w.length; M++) &#123; e = w[M]; if (e.distanceTo(p.p) &lt; 100) &#123; g(e.p, 10); w.splice(M, 1); M--; C += 10; &#125; &#125; &#125; f.beginPath(); f.fillStyle = "#00ffcc"; f.arc(p.p.x, p.p.y, p.s / 2.0, Math.PI * 2, true); f.fill(); p.p.x += P.x * p.f; p.p.y += P.y * p.f; if (p.p.x &lt; 0 || p.p.y &gt; B || A.boost != 0) &#123; y.splice(O, 1); O--; &#125; &#125; if (w.length &lt; 35 * E) &#123; w.push(F(new Enemy())); &#125; if (y.length &lt; 1 &amp;&amp; Math.random() &gt; 0.997 &amp;&amp; A.boost == 0) &#123; y.push(F(new Boost())); &#125; for (O = 0; O &lt; H.length; O++) &#123; p = H[O]; p.velocity.x += (P.x - p.velocity.x) * 0.04; p.velocity.y += (P.y - p.velocity.y) * 0.04; p.p.x += p.velocity.x; p.p.y += p.velocity.y; p.alpha -= 0.02; f.fillStyle = "rgba(255,255,255," + Math.max(P.alpha, 0) + ")"; f.fillRect(p.p.x, p.p.y, 1, 1); if (p.alpha &lt;= 0) &#123; H.splice(O, 1); &#125; &#125; if (k) &#123; scoreText = "score:&lt;span&gt;" + (Math.round(C) + 1) + "&lt;/span&gt;"; scoreText += "time:&lt;span&gt;" + Math.round(((new Date().getTime() - m) / 1000) * 100) / 100 + "s&lt;/span&gt;"; z.innerHTML = scoreText; &#125; &#125; function F(L) &#123; if (Math.random() &gt; 0.5) &#123; L.p.x = Math.random() * d; L.p.y = -20; &#125; else &#123; L.p.x = d + 20; L.p.y = (-B * 0.2) + (Math.random() * B * 1.2); &#125; return L; &#125; &#125;; function Point(a, b) &#123; this.p = &#123;x: a, y: b&#125; &#125; Point.prototype.distanceTo = function (c) &#123; var b = c.x - this.p.x; var a = c.y - this.p.y; return Math.sqrt(b * b + a * a); &#125;; Point.prototype.clonePosition = function () &#123; return &#123;x: this.p.x, y: this.p.y&#125; &#125;; function Player() &#123; this.p = &#123;x: 0, y: 0&#125;; this.trail = []; this.s = 8; this.boost = 0 &#125; Player.prototype = new Point(); function Enemy() &#123; this.p = &#123;x: 0, y: 0&#125;; this.s = 6 + (Math.random() * 4); this.f = 1 + (Math.random() * 0.4); &#125; Enemy.prototype = new Point(); function Boost() &#123; this.p = &#123;x: 0, y: 0&#125;; this.s = 10 + (Math.random() * 8); this.f = 1 + (Math.random() * 0.4) &#125; Boost.prototype = new Point(); function Particle() &#123; this.p = &#123;x: 0, y: 0&#125;; this.f = 1 + (Math.random() * 0.4); this.color = "#ff0000"; &#125; Particle.prototype = new Point(); SinuousWorld.init();&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 建立游戏 在桌面新建一个.txt文件,复制粘贴以上游戏代码，保存。 将文件后缀名.txt修改为.html。 用浏览器打开这个文件，开始游戏。 游戏截图]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[代码块语法高亮]]></title>
      <url>%2F2017%2F04%2F15%2FhighLight%2F</url>
      <content type="text"><![CDATA[写技术文档会遇到的问题：如何在一个普通的html里写代码块，并且快速高效地美化代码呢？这里介绍一个highlight插件，可以快速高效地美化你的代码块，自动识别并高亮显示代码语法，适配移动端。(行号显示不是很完美，需要调整样式) 在head中添加&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.10.0/styles/docco.min.css&quot;&gt; &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.10.0/highlight.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt; OK！代码块这样写：&lt;pre&gt; &lt;code&gt; //...你的代码 &lt;/code&gt; &lt;/pre&gt; 看看效果var test = { name : function () { return &apos;hello&apos;; }, age : function () { return 13; } }; var name = &quot;张三&quot;; function printStr(str){ console.log(str); } printStr(name); 显示行号 &lt;style&gt;/*行号样式可以根据情境自己调整*/ pre { position: relative; overflow: hidden; } code.has-numbering { margin-left: 21px; } .pre-numbering { position: absolute; top: 0; left: 0; width: 20px; padding: 7px 0; margin: 0; border-right: 1px solid #C3CCD0; border-radius: 3px 0 0 3px; text-align: center; font-family: Menlo, monospace; color: #AAA; } &lt;/style&gt; &lt;script src=&quot;https://cdn.bootcss.com/jquery/3.2.1/jquery.js&quot;&gt;&lt;/script&gt; &lt;script&gt;/*行号显示 依赖jquery*/ $(function(){ $(&apos;pre code&apos;).each(function(){ var lines = $(this).text().split(&apos;\n&apos;).length - 1; var $numbering = $(&apos;&lt;ul/&gt;&apos;).addClass(&apos;pre-numbering&apos;); $(this) .addClass(&apos;has-numbering&apos;) .parent() .append($numbering); for(i=1;i&lt;=lines;i++){ $numbering.append($(&apos;&lt;li/&gt;&apos;).text(i)); } }); }); &lt;/script&gt; 主题可以更换，更换不同的css样式表，以展示不同效果&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.10.0/styles/agate.min.css&quot;&gt; [&quot;agate.css&quot;, &quot;androidstudio.css&quot;, &quot;arduino-light.css&quot;, &quot;arta.css&quot;, &quot;ascetic.css&quot;, &quot;atelier-cave-dark.css&quot;, &quot;atelier-cave-light.css&quot;, &quot;atelier-dune-dark.css&quot;, &quot;atelier-dune-light.css&quot;, &quot;atelier-estuary-dark.css&quot;, &quot;atelier-estuary-light.css&quot;, &quot;atelier-forest-dark.css&quot;, &quot;atelier-forest-light.css&quot;, &quot;atelier-heath-dark.css&quot;, &quot;atelier-heath-light.css&quot;, &quot;atelier-lakeside-dark.css&quot;, &quot;atelier-lakeside-light.css&quot;, &quot;atelier-plateau-dark.css&quot;, &quot;atelier-plateau-light.css&quot;, &quot;atelier-savanna-dark.css&quot;, &quot;atelier-savanna-light.css&quot;, &quot;atelier-seaside-dark.css&quot;, &quot;atelier-seaside-light.css&quot;, &quot;atelier-sulphurpool-dark.css&quot;, &quot;atelier-sulphurpool-light.css&quot;, &quot;brown-paper.css&quot;, &quot;codepen-embed.css&quot;, &quot;color-brewer.css&quot;, &quot;dark.css&quot;, &quot;darkula.css&quot;, &quot;default.css&quot;, &quot;docco.css&quot;, &quot;dracula.css&quot;, &quot;far.css&quot;, &quot;foundation.css&quot;, &quot;github.css&quot;, &quot;github-gist.css&quot;, &quot;googlecode.css&quot;, &quot;grayscale.css&quot;, &quot;gruvbox-dark.css&quot;, &quot;gruvbox-light.css&quot;, &quot;hopscotch.css&quot;, &quot;hybrid.css&quot;, &quot;idea.css&quot;, &quot;ir-black.css&quot;, &quot;kimbie.dark.css&quot;, &quot;kimbie.light.css&quot;, &quot;magula.css&quot;, &quot;mono-blue.css&quot;, &quot;monokai.css&quot;, &quot;monokai-sublime.css&quot;, &quot;obsidian.css&quot;, &quot;paraiso-dark.css&quot;, &quot;paraiso-light.css&quot;, &quot;pojoaque.css&quot;, &quot;purebasic.css&quot;, &quot;qtcreator_dark.css&quot;, &quot;qtcreator_light.css&quot;, &quot;railscasts.css&quot;, &quot;rainbow.css&quot;, &quot;school-book.css&quot;, &quot;solarized-dark.css&quot;, &quot;solarized-light.css&quot;, &quot;sunburst.css&quot;, &quot;tomorrow.css&quot;, &quot;tomorrow-night.css&quot;, &quot;tomorrow-night-blue.css&quot;, &quot;tomorrow-night-bright.css&quot;, &quot;tomorrow-night-eighties.css&quot;, &quot;vs.css&quot;, &quot;xcode.css&quot;, &quot;xt256.css&quot;, &quot;zenburn.css&quot;]; 去试试吧。 hljs.initHighlightingOnLoad(); /*行号样式可以根据情境自己调整*/ pre { position: relative; overflow: hidden; } code.has-numbering { margin-left: 21px; } .pre-numbering { position: absolute; top: 0; left: 0; width: 20px; padding: 7px 0; margin: 0; border-right: 1px solid #C3CCD0; border-radius: 3px 0 0 3px; text-align: center; font-family: Menlo, monospace; color: #AAA; } /*行号显示 依赖jquery*/ $(function(){ $('pre code').each(function(){ var lines = $(this).text().split('\n').length - 1; var $numbering = $('').addClass('pre-numbering'); $(this) .addClass('has-numbering') .parent() .append($numbering); for(i=1;i]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2017%2F04%2F15%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. 关于hexo官网https://hexo.io/zh-cn/ 主题https://hexo.io/themes/ 使用的主题Next hexo 代码块语法hexo配置文件中配置代码识别选项后，可以识别代码块，自动美化并高亮显示代码语法，显示代码行号。（在移动端适配效果不是很好） 语法一:使用如下格式来包裹代码，支持语法高亮和代码行号显示 {% codeblock %} 你的代码 {% endcodeblock %} 效果: 12345678910111213var test = &#123; name : function () &#123; return 'hello'; &#125;, age : function () &#123; return 13; &#125;&#125;;var name = "张三";function printStr(str)&#123; console.log(str);&#125;printStr(name); 语法二:使用三个反引号（英文键盘Esc下面的键）来包裹代码块。这种方式实现的效果与第一种方式相同。 语法三：使用双空格缩进的方式，注意代码块之前要空一行，但这种方式在Hexo中不支持代码高亮和显示行号，你可以引入其他插件来实现高亮语法。 效果： var test = { name : function () { return &apos;hello&apos;; }, age : function () { return 13; } }; var name = &quot;张三&quot;; function printStr(str){ console.log(str); } printStr(name);]]></content>
    </entry>

    
  
  
</search>
